var {
    savedValue: number;
}

signature update {
    id: string;
    value: number;
}

let ignoreIrrelevant = (update(id, value))* in
let saveY = update( id, value | id == "y" | savedValue := value) in
let notX = update(id, value | id != "x" ) in
let consistent = update(id, value | id == "x" && savedValue - value = 0) in
let inConsistent = update(id, value | id == "x" && savedValue - value > 0 && savedValue - value < 0) in

let getConsistent =
    within (< 3) {
        ignoreIrrelevant;
        consistent
    }
in
let keepConsistent =
    within (< 5) {
        getConsistent;
        (notX || consistent)*
    }
in

let main =
    keepConsistent;
    update(id, value)
in

ignoreIrrelevant; saveY ; (main)%(> 5)
